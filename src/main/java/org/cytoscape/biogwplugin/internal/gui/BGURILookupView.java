package org.cytoscape.biogwplugin.internal.gui;

import org.cytoscape.biogwplugin.internal.model.BGNodeType;
import org.cytoscape.biogwplugin.internal.util.Utility;

import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.awt.event.ActionListener;

public class BGURILookupView {

    private final ActionListener listener;
    private final JFrame mainFrame;
    private final TableRowSorter<TableModel> sorter;

    private JPanel panel1;
    private JTextField searchField;
    private JButton searchButton;
    private JCheckBox regexCheckBox;
    private JTable resultTable;
    private JButton useURIButton;
    private JComboBox nodeTypeComboBox;
    private JTextField filterTextField;
    private JComboBox nameOrURIComboBox;

    public static final String ACTION_SELECT_NODE = "Choose selected node";
    public static final String ACTION_SEARCH = "Search for URIs";


    public BGURILookupView(ActionListener listener, JComponent parentComponent) {
        this.listener = listener;
        mainFrame = new JFrame("URI Lookup");
        mainFrame.setPreferredSize(new Dimension(600, 400));
        mainFrame.setContentPane(this.panel1);
        setupUI();
        mainFrame.getRootPane().setDefaultButton(searchButton);
        mainFrame.pack();
        mainFrame.setLocationRelativeTo(parentComponent);
        mainFrame.setVisible(true);
        DefaultTableModel tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        sorter = new TableRowSorter<TableModel>(tableModel);
        resultTable.setModel(tableModel);
        resultTable.setRowSorter(sorter);
    }

    private void setupUI() {
        BGNodeType.values();
        nodeTypeComboBox.setModel(new DefaultComboBoxModel(BGNodeType.values()));
        searchButton.addActionListener(listener);
        searchButton.setActionCommand(ACTION_SEARCH);
        useURIButton.setActionCommand(ACTION_SELECT_NODE);
        useURIButton.addActionListener(listener);
        //filterTextField.setPreferredSize(new Dimension(200, Utility.INSTANCE.getJTextFieldHeight()));
        filterTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filterRows();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                filterRows();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                filterRows();
            }
        });
    }

    private void filterRows() {
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + filterTextField.getText()));
    }

    public JCheckBox getRegexCheckBox() {
        return regexCheckBox;
    }

    public JFrame getMainFrame() {
        return mainFrame;
    }

    public JTextField getSearchField() {
        return searchField;
    }

    public JComboBox getNodeTypeComboBox() {
        return nodeTypeComboBox;
    }

    public JTable getResultTable() {
        return resultTable;
    }

    public JComboBox getNameOrURIComboBox() {
        return nameOrURIComboBox;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel1.add(panel2, BorderLayout.NORTH);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        panel2.add(panel3, BorderLayout.EAST);
        regexCheckBox = new JCheckBox();
        regexCheckBox.setText("Regex");
        panel3.add(regexCheckBox);
        nodeTypeComboBox = new JComboBox();
        panel3.add(nodeTypeComboBox);
        searchButton = new JButton();
        searchButton.setText("Search");
        panel3.add(searchButton);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.add(panel4, BorderLayout.CENTER);
        nameOrURIComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Name:");
        defaultComboBoxModel1.addElement("URI:");
        nameOrURIComboBox.setModel(defaultComboBoxModel1);
        panel4.add(nameOrURIComboBox);
        searchField = new JTextField();
        searchField.setColumns(15);
        panel4.add(searchField);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel1.add(panel5, BorderLayout.SOUTH);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel5.add(panel6, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setText("Filter results:");
        panel6.add(label1);
        filterTextField = new JTextField();
        filterTextField.setColumns(10);
        panel6.add(filterTextField);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        panel5.add(panel7, BorderLayout.EAST);
        useURIButton = new JButton();
        useURIButton.setText("Use Selected URI");
        panel7.add(useURIButton);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new BorderLayout(0, 0));
        panel1.add(panel8, BorderLayout.CENTER);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel8.add(scrollPane1, BorderLayout.CENTER);
        resultTable = new JTable();
        resultTable.setAutoCreateRowSorter(false);
        scrollPane1.setViewportView(resultTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
