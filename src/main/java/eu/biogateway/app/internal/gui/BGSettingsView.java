package eu.biogateway.app.internal.gui;

import eu.biogateway.app.internal.BGServiceManager;
import org.osgi.framework.Version;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

@SuppressWarnings("FieldCanBeLocal")
public class BGSettingsView {

    final JFrame mainFrame;

    private JTextField configFileURlField;
    private JButton saveChangesButton;
    private JButton useDefaultButton;
    private JButton browseButton;
    private JButton reloadConfigButton;
    private JPanel mainPanel;
    private JLabel versionLabel;
    private BGSettingsController controller;


    public BGSettingsView(BGSettingsController controller) {
        this.controller = controller;
        $$$setupUI$$$();
        mainFrame = new JFrame("BioGateway Settings");
        mainFrame.setContentPane(this.mainPanel);

        setupButtons();

        Version version = BGServiceManager.INSTANCE.getConfig().getCurrentVersion();

        if (version != null) {
            versionLabel.setText(version.toString());
        }


        mainFrame.pack();
        mainFrame.setVisible(true);

    }

    void setConfigFileURlFieldText(String text) {
        configFileURlField.setText(text);
    }

    private void setupButtons() {
        saveChangesButton.addActionListener(e -> {
            String url = configFileURlField.getText();
            controller.setConfigFilePath(url);
        });
        useDefaultButton.addActionListener(e -> {
            controller.useDefaults();
        });
        browseButton.addActionListener(e -> {
            controller.browseForConfigFile();
        });
        reloadConfigButton.addActionListener(e -> {
            controller.reloadConfigFile();
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel1, BorderLayout.CENTER);
        panel1.setBorder(BorderFactory.createTitledBorder(null, "Custom Configuration XML Location", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel1.add(panel2, BorderLayout.SOUTH);
        useDefaultButton = new JButton();
        useDefaultButton.setText("Use Default");
        panel2.add(useDefaultButton);
        browseButton = new JButton();
        browseButton.setText("Browse");
        panel2.add(browseButton);
        configFileURlField = new JTextField();
        configFileURlField.setColumns(40);
        configFileURlField.setEditable(true);
        configFileURlField.setText("");
        panel1.add(configFileURlField, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel3, BorderLayout.SOUTH);
        versionLabel = new JLabel();
        versionLabel.setText("Version 0.0.0");
        panel3.add(versionLabel, BorderLayout.WEST);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel3.add(panel4, BorderLayout.EAST);
        saveChangesButton = new JButton();
        saveChangesButton.setText("Save changes");
        panel4.add(saveChangesButton);
        reloadConfigButton = new JButton();
        reloadConfigButton.setText("Reload Config");
        panel4.add(reloadConfigButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
